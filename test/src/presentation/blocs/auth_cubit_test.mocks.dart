// Mocks generated by Mockito 5.0.16 from annotations
// in moviescollection/test/src/presentation/blocs/auth_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:moviescollection/core/error/failures.dart' as _i6;
import 'package:moviescollection/src/domain/entities/auth.dart' as _i7;
import 'package:moviescollection/src/domain/repositories/auth_repository.dart'
    as _i2;
import 'package:moviescollection/src/domain/usecases/refresh_token.dart' as _i8;
import 'package:moviescollection/src/domain/usecases/user_login.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthRepository_0 extends _i1.Fake implements _i2.AuthRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [UserLogin].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLogin extends _i1.Mock implements _i4.UserLogin {
  MockUserLogin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeAuthRepository_0()) as _i2.AuthRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Auth>> call(
          _i4.UserLoginParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, _i7.Auth>>.value(
                  _FakeEither_1<_i6.Failure, _i7.Auth>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.Auth>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RefreshToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockRefreshToken extends _i1.Mock implements _i8.RefreshToken {
  MockRefreshToken() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeAuthRepository_0()) as _i2.AuthRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Auth>> call(
          _i8.RefreshTokenParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, _i7.Auth>>.value(
                  _FakeEither_1<_i6.Failure, _i7.Auth>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.Auth>>);
  @override
  String toString() => super.toString();
}
