// Mocks generated by Mockito 5.0.16 from annotations
// in moviescollection/test/src/data/repositories/movie_remote_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:moviescollection/core/network/network_info.dart' as _i7;
import 'package:moviescollection/src/data/datasources/remote/movie_remote_data_source.dart'
    as _i5;
import 'package:moviescollection/src/data/models/movie_model.dart' as _i3;
import 'package:moviescollection/src/data/models/pagination_model.dart' as _i2;
import 'package:moviescollection/src/data/models/post_movie_model.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePaginationModel_0 extends _i1.Fake implements _i2.PaginationModel {}

class _FakeMovieModel_1 extends _i1.Fake implements _i3.MovieModel {}

class _FakePostMovieModel_2 extends _i1.Fake implements _i4.PostMovieModel {}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i5.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.PaginationModel> getMovies([int? pageNumber = 1]) =>
      (super.noSuchMethod(Invocation.method(#getMovies, [pageNumber]),
              returnValue:
                  Future<_i2.PaginationModel>.value(_FakePaginationModel_0()))
          as _i6.Future<_i2.PaginationModel>);
  @override
  _i6.Future<_i3.MovieModel> getMovieInfo(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieInfo, [movieId]),
              returnValue: Future<_i3.MovieModel>.value(_FakeMovieModel_1()))
          as _i6.Future<_i3.MovieModel>);
  @override
  _i6.Future<_i4.PostMovieModel> addMovie(_i4.PostMovieModel? postMovieModel) =>
      (super.noSuchMethod(Invocation.method(#addMovie, [postMovieModel]),
              returnValue:
                  Future<_i4.PostMovieModel>.value(_FakePostMovieModel_2()))
          as _i6.Future<_i4.PostMovieModel>);
  @override
  _i6.Future<_i2.PaginationModel> searchMovie(String? movieName,
          [int? pageNumber = 1]) =>
      (super.noSuchMethod(
              Invocation.method(#searchMovie, [movieName, pageNumber]),
              returnValue:
                  Future<_i2.PaginationModel>.value(_FakePaginationModel_0()))
          as _i6.Future<_i2.PaginationModel>);
  @override
  _i6.Future<_i2.PaginationModel> getMoviesByGenreId(int? genreId,
          [int? pageNumber = 1]) =>
      (super.noSuchMethod(
              Invocation.method(#getMoviesByGenreId, [genreId, pageNumber]),
              returnValue:
                  Future<_i2.PaginationModel>.value(_FakePaginationModel_0()))
          as _i6.Future<_i2.PaginationModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  String toString() => super.toString();
}
