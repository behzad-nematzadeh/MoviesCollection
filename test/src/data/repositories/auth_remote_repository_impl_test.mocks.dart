// Mocks generated by Mockito 5.0.16 from annotations
// in moviescollection/test/src/data/repositories/auth_remote_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:moviescollection/core/network/network_info.dart' as _i6;
import 'package:moviescollection/src/data/datasources/local/local_data_source.dart'
    as _i3;
import 'package:moviescollection/src/data/datasources/remote/auth_remote_data_source.dart'
    as _i5;
import 'package:moviescollection/src/data/models/auth_model.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthModel_0 extends _i1.Fake implements _i2.AuthModel {}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i3.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(Invocation.method(#isAuthenticated, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<void> cacheToken(_i2.AuthModel? auth) =>
      (super.noSuchMethod(Invocation.method(#cacheToken, [auth]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.AuthModel> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
              returnValue: Future<_i2.AuthModel>.value(_FakeAuthModel_0()))
          as _i4.Future<_i2.AuthModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i5.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthModel> login(
          String? userName, String? password, String? grantType) =>
      (super.noSuchMethod(
              Invocation.method(#login, [userName, password, grantType]),
              returnValue: Future<_i2.AuthModel>.value(_FakeAuthModel_0()))
          as _i4.Future<_i2.AuthModel>);
  @override
  _i4.Future<_i2.AuthModel> refreshToken(
          String? grantType, String? refreshToken) =>
      (super.noSuchMethod(
              Invocation.method(#refreshToken, [grantType, refreshToken]),
              returnValue: Future<_i2.AuthModel>.value(_FakeAuthModel_0()))
          as _i4.Future<_i2.AuthModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
